{"version":3,"sources":["apis/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["interceptor","aws4Interceptor","region","service","accessKeyId","secretAccessKey","api","axios","create","baseURL","interceptors","request","use","apis","insertToDo","payload","post","then","catch","alert","getAllToDos","get","response","data","map","toDoName","App","useState","toDo","setToDo","toDoList","setToDoList","useEffect","a","getToDos","className","placeholder","value","type","name","onChange","e","target","onClick","length","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2iBAGMA,EAAcC,0BAClB,CACEC,OAAQ,YACRC,QAAS,eAEX,CACEC,YAAa,GACbC,gBAAiB,KAIfC,EAAMC,IAAMC,OAAO,CACvBC,QACE,2EAGJH,EAAII,aAAaC,QAAQC,IAAIZ,GAEtB,IAyBQa,EALF,CACXC,WArBwB,SAACC,GAAD,OACxBT,EACGU,KADH,QACiBD,GACdE,OACAC,OAAM,kBACLC,MAAM,uEAiBVC,YAdyB,kBACzBd,EACGe,IADH,UAEGJ,MAAK,SAACK,GAGL,OAFaA,EAASC,KACFA,KAAKC,KAAI,qBAAGC,eAGjCP,OAAM,WACL,MAAO,Q,OCoBEQ,EAtDH,WACV,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAeA,OAbAC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,sEACIpB,EAAKO,cADT,OACTG,EADS,OAEfQ,EAAYR,GAFG,2CAAH,qDAIdW,KACC,CAACJ,IAQF,sBAAKK,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,qBAAIA,UAAU,aAAd,UACE,uBACEC,YAAa,sBACbD,UAAU,YACVE,MAAOT,EACPU,KAAK,OACLC,KAAK,OACLC,SAAU,SAACC,GAAD,OAAOZ,EAAQY,EAAEC,OAAOL,UAEpC,wBAAQF,UAAU,SAASG,KAAK,SAASK,QAjBjD,WACE9B,EAAKC,WAAW,CAAEW,SAAUG,IAC5BC,EAAQ,KAeF,4BAKJ,sBAAKM,UAAU,UAAf,UACE,oBAAIA,UAAU,YAAd,wBACA,oBAAIA,UAAU,WAAd,SACGL,EAASc,QAAU,EAClBd,EAASN,KAAI,SAACqB,GACZ,OACE,oBAAIV,UAAU,WAAd,SACGU,GAD2BA,MAMlC,oBAAIV,UAAU,YAAd,uCCtCGW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f20446d0.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { aws4Interceptor } from \"aws4-axios\";\r\n\r\nconst interceptor = aws4Interceptor(\r\n  {\r\n    region: \"eu-east-2\",\r\n    service: \"execute-api\",\r\n  },\r\n  {\r\n    accessKeyId: \"\", // My AWS IAM Access key\r\n    secretAccessKey: \"\", // My AWS IAM Secret Access key\r\n  }\r\n);\r\n\r\nconst api = axios.create({\r\n  baseURL:\r\n    \"http://skydometodo-env.eba-vfvyyand.us-east-2.elasticbeanstalk.com/api\",\r\n});\r\n\r\napi.interceptors.request.use(interceptor);\r\n\r\nexport const insertToDo = (payload) =>\r\n  api\r\n    .post(`/todo`, payload)\r\n    .then()\r\n    .catch(() =>\r\n      alert(\"Please enter a To Do in the text field or To Do already exists!\")\r\n    );\r\n\r\nexport const getAllToDos = () =>\r\n  api\r\n    .get(`/todos`)\r\n    .then((response) => {\r\n      const data = response.data;\r\n      const result = data.data.map(({ toDoName }) => toDoName);\r\n      return result;\r\n    })\r\n    .catch(() => {\r\n      return [];\r\n    });\r\n\r\nconst apis = {\r\n  insertToDo,\r\n  getAllToDos,\r\n};\r\n\r\nexport default apis;\r\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport apis from \"../apis/api\";\n\nconst App = () => {\n  const [toDo, setToDo] = useState(\"\");\n  const [toDoList, setToDoList] = useState([]);\n\n  useEffect(() => {\n    const getToDos = async () => {\n      const data = await apis.getAllToDos();\n      setToDoList(data);\n    };\n    getToDos();\n  }, [toDoList]);\n\n  function addToDo() {\n    apis.insertToDo({ toDoName: toDo });\n    setToDo(\"\");\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"content\">\n        <ul className=\"inputPlace\">\n          <input\n            placeholder={'Enter \"To Do\" here!'}\n            className=\"textInput\"\n            value={toDo}\n            type=\"text\"\n            name=\"TODO\"\n            onChange={(e) => setToDo(e.target.value)}\n          />\n          <button className=\"button\" type=\"submit\" onClick={addToDo}>\n            Add To Do\n          </button>\n        </ul>\n      </div>\n      <div className=\"content\">\n        <h1 className=\"listTitle\">To Do List</h1>\n        <ul className=\"toDoList\">\n          {toDoList.length >> 0 ? (\n            toDoList.map((item) => {\n              return (\n                <li className=\"listItem\" key={item}>\n                  {item}\n                </li>\n              );\n            })\n          ) : (\n            <h1 className=\"listTitle\">No items to show</h1>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}